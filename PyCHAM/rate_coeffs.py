'''module for calculating reaction rate coefficients (automatically generated)'''
# module to hold expressions for calculating rate coefficients # 
# created at 2021-05-06 14:40:48.675626

import numpy
import photolysisRates

def evaluate_rates(RO2, H2O, TEMP, lightm, time, lat, lon, act_flux_path, DayOfYear, M, N2, O2, photo_par_file, Jlen, tf):

	# inputs: ------------------------------------------------------------------
	# RO2 - names of components included in peroxy radical list
	# M - third body concentration (molecules/cc (air))
	# N2 - nitrogen concentration (molecules/cc (air))
	# O2 - oxygen concentration (molecules/cc (air))
	# H2O, TEMP: given by the user
	# lightm: given by the user and is 0 for lights off and 1 for on
	# reaction rate coefficients and their names parsed in eqn_parser.py 
	# Jlen - number of photolysis reactions
	# tf - sunlight transmission factor
	# ------------------------------------------------------------------------

	erf = 0; err_mess = '' # begin assuming no errors
	# calculate generic reaction rate coefficients given by chemical scheme
	try:
		KRO2NO=2.7e-12*numpy.exp(360/TEMP) 
		KRO2HO2=2.91e-13*numpy.exp(1300/TEMP) 
		KAPHO2=5.2e-13*numpy.exp(980/TEMP) 
		KAPNO=7.5e-12*numpy.exp(290/TEMP) 
		KRO2NO3=2.3e-12 
		KNO3AL=1.4e-12*numpy.exp(-1860/TEMP) 
		KDEC=1.00e+06 
		KROPRIM=2.50e-14*numpy.exp(-300/TEMP) 
		KROSEC=2.50e-14*numpy.exp(-300/TEMP) 
		KCH3O2=1.03e-13*numpy.exp(365/TEMP) 
		K298CH3O2=3.5e-13 
		K14ISOM1=3.00e7*numpy.exp(-5300/TEMP) 
		KD0=1.10e-05*M*numpy.exp(-10100/TEMP) 
		KDI=1.90e17*numpy.exp(-14100/TEMP) 
		KRD=KD0/KDI 
		FCD=0.30 
		NCD=0.75-1.27*(numpy.log10(FCD)) 
		FD=10**(numpy.log10(FCD)/(1+(numpy.log10(KRD)/NCD)**2)) 
		KBPAN=(KD0*KDI)*FD/(KD0+KDI) 
		KC0=3.28e-28*M*(TEMP/300)**-6.87 
		KCI=1.125e-11*(TEMP/300)**-1.105 
		KRC=KC0/KCI 
		FCC=0.30 
		NC=0.75-1.27*(numpy.log10(FCC)) 
		FC=10**(numpy.log10(FCC)/(1+(numpy.log10(KRC)/NC)**2)) 
		KFPAN=(KC0*KCI)*FC/(KC0+KCI) 
		K10=1.0e-31*M*(TEMP/300)**-1.6 
		K1I=5.0e-11*(TEMP/300)**-0.3 
		KR1=K10/K1I 
		FC1=0.85 
		NC1=0.75-1.27*(numpy.log10(FC1)) 
		F1=10**(numpy.log10(FC1)/(1+(numpy.log10(KR1)/NC1)**2)) 
		KMT01=(K10*K1I)*F1/(K10+K1I) 
		K20=1.3e-31*M*(TEMP/300)**-1.5 
		K2I=2.3e-11*(TEMP/300)**0.24 
		KR2=K20/K2I 
		FC2=0.6 
		NC2=0.75-1.27*(numpy.log10(FC2)) 
		F2=10**(numpy.log10(FC2)/(1+(numpy.log10(KR2)/NC2)**2)) 
		KMT02=(K20*K2I)*F2/(K20+K2I) 
		K30=3.6e-30*M*(TEMP/300)**-4.1 
		K3I=1.9e-12*(TEMP/300)**0.2 
		KR3=K30/K3I 
		FC3=0.35 
		NC3=0.75-1.27*(numpy.log10(FC3)) 
		F3=10**(numpy.log10(FC3)/(1+(numpy.log10(KR3)/NC3)**2)) 
		KMT03=(K30*K3I)*F3/(K30+K3I) 
		K40=1.3e-3*M*(TEMP/300)**-3.5*numpy.exp(-11000/TEMP) 
		K4I=9.7e+14*(TEMP/300)**0.1*numpy.exp(-11080/TEMP) 
		KR4=K40/K4I 
		FC4=0.35 
		NC4=0.75-1.27*(numpy.log10(FC4)) 
		F4=10**(numpy.log10(FC4)/(1+(numpy.log10(KR4)/NC4)**2)) 
		KMT04=(K40*K4I)*F4/(K40+K4I) 
		KMT05=1.44e-13*(1+(M/4.2e+19)) 
		KMT06=1+(1.40e-21*numpy.exp(2200/TEMP)*H2O) 
		K70=7.4e-31*M*(TEMP/300)**-2.4 
		K7I=3.3e-11*(TEMP/300)**-0.3 
		KR7=K70/K7I 
		FC7=0.81 
		NC7=0.75-1.27*(numpy.log10(FC7)) 
		F7=10**(numpy.log10(FC7)/(1+(numpy.log10(KR7)/NC7)**2)) 
		KMT07=(K70*K7I)*F7/(K70+K7I) 
		K80=3.2e-30*M*(TEMP/300)**-4.5 
		K8I=3.0e-11 
		KR8=K80/K8I 
		FC8=0.41 
		NC8=0.75-1.27*(numpy.log10(FC8)) 
		F8=10**(numpy.log10(FC8)/(1+(numpy.log10(KR8)/NC8)**2)) 
		KMT08=(K80*K8I)*F8/(K80+K8I) 
		K90=1.4e-31*M*(TEMP/300)**-3.1 
		K9I=4.0e-12 
		KR9=K90/K9I 
		FC9=0.4 
		NC9=0.75-1.27*(numpy.log10(FC9)) 
		F9=10**(numpy.log10(FC9)/(1+(numpy.log10(KR9)/NC9)**2)) 
		KMT09=(K90*K9I)*F9/(K90+K9I) 
		K100=4.10e-05*M*numpy.exp(-10650/TEMP) 
		K10I=6.0e+15*numpy.exp(-11170/TEMP) 
		KR10=K100/K10I 
		FC10=0.4 
		NC10=0.75-1.27*(numpy.log10(FC10)) 
		F10=10**(numpy.log10(FC10)/(1+(numpy.log10(KR10)/NC10)**2)) 
		KMT10=(K100*K10I)*F10/(K100+K10I) 
		K1=2.40e-14*numpy.exp(460/TEMP) 
		K3=6.50e-34*numpy.exp(1335/TEMP) 
		K4=2.70e-17*numpy.exp(2199/TEMP) 
		K2=(K3*M)/(1+(K3*M/K4)) 
		KMT11=K1+K2 
		K120=2.5e-31*M*(TEMP/300)**-2.6 
		K12I=2.0e-12 
		KR12=K120/K12I 
		FC12=0.53 
		NC12=0.75-1.27*(numpy.log10(FC12)) 
		F12=10**(numpy.log10(FC12)/(1.0+(numpy.log10(KR12)/NC12)**2)) 
		KMT12=(K120*K12I*F12)/(K120+K12I) 
		K130=2.5e-30*M*(TEMP/300)**-5.5 
		K13I=1.8e-11 
		KR13=K130/K13I 
		FC13=0.36 
		NC13=0.75-1.27*(numpy.log10(FC13)) 
		F13=10**(numpy.log10(FC13)/(1+(numpy.log10(KR13)/NC13)**2)) 
		KMT13=(K130*K13I)*F13/(K130+K13I) 
		K140=9.0e-5*numpy.exp(-9690/TEMP)*M 
		K14I=1.1e+16*numpy.exp(-10560/TEMP) 
		KR14=K140/K14I 
		FC14=0.36 
		NC14=0.75-1.27*(numpy.log10(FC14)) 
		F14=10**(numpy.log10(FC14)/(1+(numpy.log10(KR14)/NC14)**2)) 
		KMT14=(K140*K14I)*F14/(K140+K14I) 
		K150=8.6e-29*M*(TEMP/300)**-3.1 
		K15I=9.0e-12*(TEMP/300)**-0.85 
		KR15=K150/K15I 
		FC15=0.48 
		NC15=0.75-1.27*(numpy.log10(FC15)) 
		F15=10**(numpy.log10(FC15)/(1+(numpy.log10(KR15)/NC15)**2)) 
		KMT15=(K150*K15I)*F15/(K150+K15I) 
		K160=8e-27*M*(TEMP/300)**-3.5 
		K16I=3.0e-11*(TEMP/300)**-1 
		KR16=K160/K16I 
		FC16=0.5 
		NC16=0.75-1.27*(numpy.log10(FC16)) 
		F16=10**(numpy.log10(FC16)/(1+(numpy.log10(KR16)/NC16)**2)) 
		KMT16=(K160*K16I)*F16/(K160+K16I) 
		K170=5.0e-30*M*(TEMP/300)**-1.5 
		K17I=1.0e-12 
		KR17=K170/K17I 
		FC17=0.17*numpy.exp(-51/TEMP)+numpy.exp(-TEMP/204) 
		NC17=0.75-1.27*(numpy.log10(FC17)) 
		F17=10**(numpy.log10(FC17)/(1.0+(numpy.log10(KR17)/NC17)**2)) 
		KMT17=(K170*K17I*F17)/(K170+K17I) 
		KMT18=9.5e-39*O2*numpy.exp(5270/TEMP)/(1+7.5e-29*O2*numpy.exp(5610/TEMP)) 
		KPPN0=1.7e-03*numpy.exp(-11280/TEMP)*M 
		KPPNI=8.3e+16*numpy.exp(-13940/TEMP) 
		KRPPN=KPPN0/KPPNI 
		FCPPN=0.36 
		NCPPN=0.75-1.27*(numpy.log10(FCPPN)) 
		FPPN=10**(numpy.log10(FCPPN)/(1+(numpy.log10(KRPPN)/NCPPN)**2)) 
		KBPPN=(KPPN0*KPPNI)*FCPPN/(KPPN0+KPPNI) 

	except:
		erf = 1 # flag error
		err_mess = 'Error: reaction rates failed to be calculated, please check chemical scheme and associated chemical scheme markers, which are stated in the model variables input file' # error message

	# estimate and append photolysis rates
	J = photolysisRates.PhotolysisCalculation(time, lat, lon, TEMP, act_flux_path, DayOfYear, photo_par_file, Jlen, tf)

	if lightm == 0:
		J = [0]*len(J)
	rate_values = numpy.zeros((331))
	
	# reac_coef has been formatted so that python can recognize it
	# gas-phase reactions
	rate_values[0] = 5.6e-34*N2*(TEMP/300)**-2.6*O2+6.0e-34*O2*(TEMP/300)**-2.6*O2
	rate_values[1] = 8.0e-12*numpy.exp(-2060/TEMP)
	rate_values[2] = KMT01
	rate_values[3] = 5.5e-12*numpy.exp(188/TEMP)
	rate_values[4] = KMT02
	rate_values[5] = 3.2e-11*numpy.exp(67/TEMP)*O2+2.0e-11*numpy.exp(130/TEMP)*N2
	rate_values[6] = 1.4e-12*numpy.exp(-1310/TEMP)
	rate_values[7] = 1.4e-13*numpy.exp(-2470/TEMP)
	rate_values[8] = 3.3e-39*numpy.exp(530/TEMP)*O2
	rate_values[9] = 1.8e-11*numpy.exp(110/TEMP)
	rate_values[10] = 4.50e-14*numpy.exp(-1260/TEMP)
	rate_values[11] = KMT03
	rate_values[12] = 2.14e-10*H2O
	rate_values[13] = 1.70e-12*numpy.exp(-940/TEMP)
	rate_values[14] = 7.7e-12*numpy.exp(-2100/TEMP)
	rate_values[15] = KMT05
	rate_values[16] = 2.9e-12*numpy.exp(-160/TEMP)
	rate_values[17] = 2.03e-16*(TEMP/300)**4.57*numpy.exp(693/TEMP)
	rate_values[18] = 4.8e-11*numpy.exp(250/TEMP)
	rate_values[19] = 2.20e-13*KMT06*numpy.exp(600/TEMP)+1.90e-33*M*KMT06*numpy.exp(980/TEMP)
	rate_values[20] = KMT07
	rate_values[21] = KMT08
	rate_values[22] = 2.0e-11
	rate_values[23] = 3.45e-12*numpy.exp(270/TEMP)
	rate_values[24] = KMT09
	rate_values[25] = 3.2e-13*numpy.exp(690/TEMP)*1.0
	rate_values[26] = 4.0e-12
	rate_values[27] = 2.5e-12*numpy.exp(260/TEMP)
	rate_values[28] = KMT11
	rate_values[29] = 4.0e-32*numpy.exp(-1000/TEMP)*M
	rate_values[30] = KMT12
	rate_values[31] = 1.3e-12*numpy.exp(-330/TEMP)*O2
	rate_values[32] = 6.00e-06
	rate_values[33] = 4.00e-04
	rate_values[34] = 1.20e-15*H2O
	rate_values[35] = J[1]
	rate_values[36] = J[2]
	rate_values[37] = J[3]
	rate_values[38] = J[4]
	rate_values[39] = J[5]
	rate_values[40] = J[6]
	rate_values[41] = J[7]
	rate_values[42] = J[8]
	rate_values[43] = KMT04
	rate_values[44] = KMT10
	rate_values[45] = 1.4e-11*0.103
	rate_values[46] = 1.4e-11*0.506
	rate_values[47] = 1.4e-11*0.391
	rate_values[48] = 4.65e-11*0.200
	rate_values[49] = 4.65e-11*0.727
	rate_values[50] = 4.65e-11*0.073
	rate_values[51] = KRO2HO2*0.820
	rate_values[52] = KRO2NO
	rate_values[53] = KRO2NO3
	rate_values[54] = 8.00e-13*RO2*0.70
	rate_values[55] = 8.00e-13*RO2*0.30
	rate_values[56] = KRO2HO2*0.820
	rate_values[57] = KRO2NO
	rate_values[58] = KRO2NO3
	rate_values[59] = 8.00e-13*RO2*0.70
	rate_values[60] = 8.00e-13*RO2*0.30
	rate_values[61] = 2.08e-12
	rate_values[62] = 2.86e-13
	rate_values[63] = 1.7e-10*1.0
	rate_values[64] = 2.8e-17
	rate_values[65] = 2.0e-10*1.0
	rate_values[66] = 1.15e-10
	rate_values[67] = J[41]
	rate_values[68] = KDEC*0.68
	rate_values[69] = KDEC*0.32
	rate_values[70] = 1.11e-10
	rate_values[71] = 1.07e-10
	rate_values[72] = J[54]
	rate_values[73] = J[41]
	rate_values[74] = KDEC
	rate_values[75] = 1.04e-10
	rate_values[76] = J[54]
	rate_values[77] = 3.13e-13*1.0
	rate_values[78] = 2.8e-12
	rate_values[79] = KRO2HO2*0.820
	rate_values[80] = KRO2NO
	rate_values[81] = KRO2NO3
	rate_values[82] = 2.50e-13*RO2
	rate_values[83] = 2.08e-12
	rate_values[84] = 2.86e-13
	rate_values[85] = KDEC*1.0
	rate_values[86] = 5.44e-11
	rate_values[87] = J[23]+J[24]
	rate_values[88] = J[31]
	rate_values[89] = J[33]
	rate_values[90] = J[32]
	rate_values[91] = KNO3AL
	rate_values[92] = 3.1e-12*numpy.exp(340/TEMP)
	rate_values[93] = 1.00e-12
	rate_values[94] = 2.3e-11
	rate_values[95] = 2.08e-12
	rate_values[96] = 2.86e-13
	rate_values[97] = 4.65e-11
	rate_values[98] = J[41]
	rate_values[99] = 5.03e-12
	rate_values[100] = 6.83e-12
	rate_values[101] = KRO2HO2*0.820
	rate_values[102] = KRO2NO
	rate_values[103] = KRO2NO3
	rate_values[104] = 8.80e-13*RO2
	rate_values[105] = 4.38e-11
	rate_values[106] = J[18]+J[19]
	rate_values[107] = J[34]
	rate_values[108] = 1.23e-11
	rate_values[109] = KDEC*0.83
	rate_values[110] = KDEC*0.17
	rate_values[111] = KAPHO2*0.15
	rate_values[112] = KAPHO2*0.41
	rate_values[113] = KAPHO2*0.44
	rate_values[114] = 7.5e-12*numpy.exp(290/TEMP)
	rate_values[115] = KFPAN
	rate_values[116] = 4.0e-12
	rate_values[117] = 1.00e-11*0.3*RO2
	rate_values[118] = 1.00e-11*0.7*RO2
	rate_values[119] = J[11]
	rate_values[120] = J[12]
	rate_values[121] = 5.5e-16
	rate_values[122] = 5.4e-12*numpy.exp(135/TEMP)
	rate_values[123] = 7.00e11*numpy.exp(-3160/TEMP)+5.00e-12*O2
	rate_values[124] = 5.00e-12*O2*3.2*(1-numpy.exp(-550/TEMP))
	rate_values[125] = 5.00e-12*O2*3.2*numpy.exp(-550/TEMP)
	rate_values[126] = KRO2HO2*0.820
	rate_values[127] = KRO2NO
	rate_values[128] = KRO2NO3
	rate_values[129] = 8.80e-13*RO2
	rate_values[130] = KRO2HO2*0.820
	rate_values[131] = KRO2NO
	rate_values[132] = KRO2NO3
	rate_values[133] = 8.80e-13*RO2*0.2
	rate_values[134] = 8.80e-13*RO2*0.6
	rate_values[135] = 8.80e-13*RO2*0.2
	rate_values[136] = 7.83e-15
	rate_values[137] = 5.10e-14
	rate_values[138] = KRO2HO2*0.820
	rate_values[139] = KRO2NO
	rate_values[140] = KRO2NO3
	rate_values[141] = 2.50e-13*RO2
	rate_values[142] = KRO2HO2*0.820
	rate_values[143] = KRO2NO
	rate_values[144] = KRO2NO3
	rate_values[145] = 8.00e-13*RO2
	rate_values[146] = KRO2HO2*0.820
	rate_values[147] = KRO2NO
	rate_values[148] = KRO2NO3
	rate_values[149] = 8.00e-13*RO2
	rate_values[150] = 2.05e-10
	rate_values[151] = J[41]
	rate_values[152] = KDEC*0.35
	rate_values[153] = KDEC*0.65
	rate_values[154] = J[34]
	rate_values[155] = 8.0e-13
	rate_values[156] = 1.4e-12
	rate_values[157] = 3.8e-13*numpy.exp(780/TEMP)*(1-1/(1+498*numpy.exp(-1160/TEMP)))
	rate_values[158] = 3.8e-13*numpy.exp(780/TEMP)*(1/(1+498*numpy.exp(-1160/TEMP)))
	rate_values[159] = 2.3e-12*numpy.exp(360/TEMP)*0.001
	rate_values[160] = 2.3e-12*numpy.exp(360/TEMP)*0.999
	rate_values[161] = KMT13
	rate_values[162] = 1.2e-12
	rate_values[163] = 2*KCH3O2*RO2*7.18*numpy.exp(-885/TEMP)
	rate_values[164] = 2*KCH3O2*RO2*0.5*(1-7.18*numpy.exp(-885/TEMP))
	rate_values[165] = 2*KCH3O2*RO2*0.5*(1-7.18*numpy.exp(-885/TEMP))
	rate_values[166] = J[34]
	rate_values[167] = KNO3AL*2.4
	rate_values[168] = 1.9e-12*numpy.exp(575/TEMP)
	rate_values[169] = 8.00e-13
	rate_values[170] = 3.70e-12
	rate_values[171] = J[41]
	rate_values[172] = 3e-14
	rate_values[173] = KBPAN
	rate_values[174] = KAPHO2*0.15
	rate_values[175] = KAPHO2*0.41
	rate_values[176] = KAPHO2*0.44
	rate_values[177] = KAPNO
	rate_values[178] = KFPAN
	rate_values[179] = KRO2NO3*1.74
	rate_values[180] = 1.00e-11*0.7*RO2
	rate_values[181] = 1.00e-11*0.3*RO2
	rate_values[182] = 8.56e-11
	rate_values[183] = J[41]
	rate_values[184] = KDEC
	rate_values[185] = 1.42e-10
	rate_values[186] = J[41]
	rate_values[187] = KDEC
	rate_values[188] = 7.95e-11
	rate_values[189] = 1.11e-10
	rate_values[190] = KRO2HO2*0.820
	rate_values[191] = KRO2NO
	rate_values[192] = KRO2NO3
	rate_values[193] = 8.00e-13*RO2
	rate_values[194] = KRO2HO2*0.820
	rate_values[195] = KRO2NO
	rate_values[196] = KRO2NO3
	rate_values[197] = 8.00e-13*RO2
	rate_values[198] = 1.53e-12
	rate_values[199] = J[41]
	rate_values[200] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[201] = J[41]
	rate_values[202] = KDEC
	rate_values[203] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[204] = J[41]
	rate_values[205] = KDEC
	rate_values[206] = 1.50e-12
	rate_values[207] = KRO2HO2*0.625
	rate_values[208] = KRO2NO
	rate_values[209] = KRO2NO3
	rate_values[210] = 8.80e-13*0.2*RO2
	rate_values[211] = 8.80e-13*0.6*RO2
	rate_values[212] = 8.80e-13*0.2*RO2
	rate_values[213] = J[41]
	rate_values[214] = 5.3e-12*numpy.exp(190/TEMP)*0.6
	rate_values[215] = 5.3e-12*numpy.exp(190/TEMP)*0.4
	rate_values[216] = J[51]
	rate_values[217] = 4.0e-13*numpy.exp(-845/TEMP)
	rate_values[218] = 7.2e-14*numpy.exp(-1080/TEMP)*O2
	rate_values[219] = KMT14
	rate_values[220] = 2.85e-12*numpy.exp(-345/TEMP)
	rate_values[221] = J[41]+J[15]
	rate_values[222] = 1.58e-11
	rate_values[223] = 9.58e-11
	rate_values[224] = J[34]*2
	rate_values[225] = KAPHO2*0.44
	rate_values[226] = KAPHO2*0.56
	rate_values[227] = KAPNO
	rate_values[228] = KFPAN
	rate_values[229] = KRO2NO3*1.74
	rate_values[230] = 1.00e-11*RO2
	rate_values[231] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[232] = J[41]
	rate_values[233] = KDEC
	rate_values[234] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[235] = J[41]
	rate_values[236] = KDEC
	rate_values[237] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[238] = KRO2HO2*0.706
	rate_values[239] = KRO2NO
	rate_values[240] = KRO2NO3
	rate_values[241] = 9.20e-14*RO2*0.70
	rate_values[242] = 9.20e-14*RO2*0.30
	rate_values[243] = 4.66e-11
	rate_values[244] = J[41]
	rate_values[245] = KDEC
	rate_values[246] = 2.55e-11
	rate_values[247] = 5.68e-12
	rate_values[248] = 5.77e-11
	rate_values[249] = J[15]*2
	rate_values[250] = KAPHO2*0.56
	rate_values[251] = KAPHO2*0.44
	rate_values[252] = KAPNO
	rate_values[253] = KFPAN
	rate_values[254] = KRO2NO3*1.74
	rate_values[255] = 1.00e-11*RO2
	rate_values[256] = 7.48e-11
	rate_values[257] = J[15]+J[35]
	rate_values[258] = 9.29e-11
	rate_values[259] = J[41]
	rate_values[260] = 8.96e-11
	rate_values[261] = KBPAN
	rate_values[262] = KDEC
	rate_values[263] = 1.69e-11
	rate_values[264] = J[41]
	rate_values[265] = KDEC
	rate_values[266] = 1.34e-11
	rate_values[267] = KAPHO2*0.44
	rate_values[268] = KAPHO2*0.56
	rate_values[269] = KAPNO
	rate_values[270] = KFPAN
	rate_values[271] = KRO2NO3*1.74
	rate_values[272] = 1.00e-11*RO2
	rate_values[273] = 3.60e-11
	rate_values[274] = J[41]+J[34]
	rate_values[275] = 3.28e-11
	rate_values[276] = KBPAN
	rate_values[277] = KNO3AL*5.5
	rate_values[278] = 1.72e-11
	rate_values[279] = J[34]+J[35]*2
	rate_values[280] = J[34]
	rate_values[281] = J[35]
	rate_values[282] = KNO3AL*4.0
	rate_values[283] = 1.23e-11
	rate_values[284] = KAPHO2*0.56
	rate_values[285] = KAPHO2*0.44
	rate_values[286] = KAPNO
	rate_values[287] = KFPAN
	rate_values[288] = KRO2NO3*1.74
	rate_values[289] = 1.00e-11*RO2
	rate_values[290] = 7.33e-11
	rate_values[291] = J[41]
	rate_values[292] = 6.97e-11
	rate_values[293] = KBPAN
	rate_values[294] = J[13]
	rate_values[295] = 1.4e-12*numpy.exp(-1860/TEMP)
	rate_values[296] = 4.7e-12*numpy.exp(345/TEMP)*0.95
	rate_values[297] = 4.7e-12*numpy.exp(345/TEMP)*0.05
	rate_values[298] = J[22]
	rate_values[299] = J[41]
	rate_values[300] = 7.34e-12
	rate_values[301] = KBPAN
	rate_values[302] = 3.74e-12
	rate_values[303] = KRO2HO2*0.387
	rate_values[304] = KRO2NO
	rate_values[305] = KRO2NO3
	rate_values[306] = 2.00e-12*0.2*RO2
	rate_values[307] = 2.00e-12*0.6*RO2
	rate_values[308] = 2.00e-12*0.2*RO2
	rate_values[309] = 2.91e-11
	rate_values[310] = 1.90e-12*numpy.exp(190/TEMP)
	rate_values[311] = J[41]
	rate_values[312] = J[15]
	rate_values[313] = KDEC
	rate_values[314] = KNO3AL
	rate_values[315] = 1.00e-11*0.200
	rate_values[316] = 1.00e-11*0.800
	rate_values[317] = J[15]
	rate_values[318] = KAPHO2*0.44
	rate_values[319] = KAPHO2*0.15
	rate_values[320] = KAPHO2*0.41
	rate_values[321] = KAPNO
	rate_values[322] = KFPAN
	rate_values[323] = KRO2NO3*1.74
	rate_values[324] = 1.00e-11*0.7*RO2
	rate_values[325] = 1.00e-11*0.3*RO2
	rate_values[326] = 2.73e-12
	rate_values[327] = 6.19e-12
	rate_values[328] = J[41]
	rate_values[329] = 1.12e-12
	rate_values[330] = KBPAN
	
	# aqueous-phase reactions
	
	return(rate_values, erf, err_mess)
